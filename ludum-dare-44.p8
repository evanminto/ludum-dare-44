pico-8 cartridge // http://www.pico-8.com
version 16
__lua__

flags = {
  drawable = 0,
  obstacle = 1,
  checkpoint = 2,
  playerspawn = 3,
  win = 4,
}

config = {
  -- amount the player moves left/right every frame
  movespeed = 2.5,

  -- vertical speed applied while jumping (dampened by gravity)
  jumpspeed = 3.5,
  -- gravitational acceleration
  gravity = 0.55,
  -- max frames that player can hold a jump
  maxjumpframes = 30,
  -- suppresses gravity while holding a jump. 0 doesn't suppress, 1 completely suppresses
  ascentcontrol = 0.7,
  -- lets the player jump if they were on a platform within the past n frames
  latejumpframes = 1,

  layers = {
    {
      start = {0,16},
      size = {32,32},
      camerafollow = 0,
      transparent = 0,
    },
    {
      start = {0,0},
      size = {128,32},
      camerafollow = 1,
      flags = {
        flags.drawable
      },
      transparent = 0,
    }
  },

  -- player health
  maxhealth = 100,
  dmgamount = 25,

  -- player time
  maxtime = 100,
  tickframes = 30, -- note: game runs at 30fps
  tickamount = 1,

  -- amount lost/gained each time you convert between health/time
  conversionhealth = 5,
  conversiontime = 5,
}

-- class.lua
-- compatible with lua 5.1 (not 5.0).
function class(base, init)
   local c = {}    -- a new class instance
   if not init and type(base) == 'function' then
      init = base
      base = nil
   elseif type(base) == 'table' then
    -- our new class is a shallow copy of the base class!
      for i,v in pairs(base) do
         c[i] = v
      end
      c._base = base
   end
   -- the class will be the metatable for all its objects,
   -- and they will look up their methods in it.
   c.__index = c

   -- expose a constructor which can be called by <classname>(<args>)
   local mt = {}
   mt.__call = function(class_tbl, ...)
   local obj = {}
   setmetatable(obj,c)
   if init then
      init(obj,...)
   else
      -- make sure that any stuff from the base class is initialized!
      if base and base.init then
      base.init(obj, ...)
      end
   end
   return obj
   end
   c.init = init
   c.is_a = function(self, klass)
      local m = getmetatable(self)
      while m do
         if m == klass then return true end
         m = m._base
      end
      return false
   end
   setmetatable(c, mt)
   return c
end




vector = class(function(v, x, y)
  v.x = x or 0
  v.y = y or 0
end)

function vector:add(v)
  return vector(self.x + v.x, self.y + v.y)
end

function vector:multiply(scalar)
  return vector(self.x * scalar, self.y * scalar)
end

function vector:get_diff(v)
  return vector(abs(v.x - self.x), abs(v.y - self.y))
end

function vector:clone()
  return vector(self.x,self.y)
end

function intersect(min1, max1, min2, max2)
  return max(min1,max1) > min(min2,max2) and
         min(min1,max1) < max(min2,max2)
end

sprite = class(function(s,name)
  if name == "player" then
    s.x = 0
    s.y = 20
    s.w = 8
    s.h = 12
  end
end)

function sprite:draw(x,y,flipx)
  sspr(self.x,self.y,self.w,self.h,x,y, self.w,self.h, flipx)
end

player = class(function(p)
  p.pos = vector(0,0)
  p.vel = vector()
  p.d = vector()
  p.height = 12
  p.width = 8
  p.lastonplatform = nil
  p.onplatform = false
  p.movingl = false
  p.movingr = false

  p.jumptimer = 0
  p.holdingjumpbutton = false
  p.jumpblocked = false

  p.facingleft = false

  p.xmin = 0
  p.xmax = 1024
  p.ymin = -10000
  p.ymax = 10000

  p.health = config.maxhealth
  p.time = config.maxtime

  for i=1,128 do
    for j=1,128 do
      if fget(mget(i,j), flags.playerspawn) then
        p.pos = vector(i*8, j*8 + 8 - p.height)
      end
    end
  end

  p.spawnpos = p.pos:clone()
  p.checkpointpos = p.pos:clone()

  p.sprite = sprites.player
end)

function player:win()
  self:respawn()
end

function player:tick()
  self.time -= config.tickamount
  self:checkhealthtime()
end

function player:hurt()
  self.health -= config.dmgamount
  self:checkhealthtime()
end

function player:checkhealthtime()
  if self.health <= 0 then
    self:die()
  end

  if self.time <= 0 then
    self:outoftime()
  end
end

function player:respawn()
  self.pos = self.spawnpos:clone()
  self.health = config.maxhealth
  self.time = config.maxtime
  self.facingleft = false
end

function player:die()
  self:respawn()
end

function player:outoftime()
  self:respawn()
end

function player:fall()
  self.pos = self.checkpointpos:clone()
  self:hurt()
  self.facingleft = false
end

function player:time2health()
  self.time -= config.conversiontime
  self.health += config.conversionhealth
  self:checkhealthtime()
end

function player:health2time()
  self.health -= config.conversionhealth
  self.time += config.conversiontime
  self:checkhealthtime()
end

function player:preupdate()
  self.d = vector()
  self.xmin = 0
  self.xmax = 1024
  self.ymin = -10000
  self.ymax = 10000

  local gravity = config.gravity

  if btn(0) and btn(1) then
    if self.movingl then
      self.d.x += config.movespeed
      self.facingleft = false
    elseif self.movingr then
      self.d.x -= config.movespeed
      self.facingleft = true
    end
  elseif btn(0) then
    self.d.x -= config.movespeed
    self.movingl = true
    self.movingr = false
    self.facingleft = true
  elseif btn(1) then
    self.d.x += config.movespeed
    self.movingl = false
    self.movingr = true
    self.facingleft = false
  end

  if btn(2) then
    if (self.onplatform or frame - self.lastonplatform <= config.latejumpframes) and not self.jumpblocked then
      self.vel.y -= config.jumpspeed
      self.jumptimer = config.maxjumpframes
    end

    if self.jumptimer > 0 then
      gravity = config.gravity * ((1 - config.ascentcontrol) + config.ascentcontrol * (1 - self.jumptimer / config.maxjumpframes))
      self.jumptimer -= 1
    end

    self.jumpblocked = true
  else
    self.jumpblocked = false
  end

  if btn(4) then
    self:time2health()
  elseif btn(5) then
    self:health2time()
  end

  self.vel.y += gravity
  self.d = self.d:add(self.vel)
end

function player:updatex()
  self.pos.x += self.d.x
  self.pos.x = mid(self.xmin, self.pos.x, self.xmax)
  self.d.x = 0
end

function player:updatey()
  if self.onplatform then
    self.vel.y = min(self.vel.y, 0)
  end

  self.pos.y += self.d.y
  self.pos.y = mid(self.ymin, self.pos.y, self.ymax)
  self.d.y = 0
end

function player:postupdate()
  local tiles = self:gettiles(false, false)

  foreach(tiles, function(t)
    if fget(mget(t[1],t[2]), flags.checkpoint) then
      self.checkpointpos = self.pos:clone()
    end
  end)

  foreach(tiles, function(t)
    if fget(mget(t[1],t[2]), flags.win) then
      self:win()
    end
  end)

  if self.pos.y > 128 then
    self:fall()
  end

  if frame % config.tickframes == 0 then
    self:tick()
  end
end

function player:draw()
  local s = sprite("player")

  s:draw(self.pos.x,self.pos.y, self.facingleft)
end

function player:gettiles(x,y)
  local d = vector()
  if x then d.x = self.d.x end
  if y then d.y = self.d.y end

  local top = flr((self.pos.y + d.y) / 8)
  local left = flr((self.pos.x + d.x) / 8)
  local bottom = flr((self.pos.y + self.height - 0.001 + d.y) / 8)
  local right = flr((self.pos.x + self.width - 0.001 + d.x) / 8)

  local vmid = nil
  local hmid = nil

  if bottom - top > 1 then
    vmid = bottom - 1
  end
  if right - left > 1 then
    vmid = right - 1
  end

  local tiles = {}
  tiles.bottom = {}

  add(tiles,{left,top})
  if hmid ~= nil then add(tiles,{hmid,top}) end
  add(tiles,{right,top})
  if vmid ~= nil then
    add(tiles,{left,vmid})
    if hmid ~= nil then add(tiles,{hmid,vmid}) end
    add(tiles,{right,vmid})
  end
  add(tiles,{left,bottom})
  if hmid ~= nil then add(tiles,{hmid,bottom}) end
  add(tiles,{right,bottom})

  return tiles
end

level = class(function(l)
  l.player = player()
  l.width = 1024
end)

function level:update()
  self.player.onplatform = false

  self.player.d.y = 1
  local tiles = self.player:gettiles(false, true)

  foreach(tiles, function(t)
    if fget(mget(t[1],t[2]), flags.obstacle) then
      self.player.onplatform = true
    end
  end)

  if self.player.onplatform then
    self.player.lastonplatform = frame
  end

  self.player:preupdate()

  local xtiles = self.player:gettiles(true, false)

  local xmax = self.player.xmax
  local xmin = self.player.xmin
  foreach(xtiles, function(t)
    if fget(mget(t[1],t[2]), flags.obstacle) then
      if self.player.d.x > 0 then
        xmax = min(xmax, t[1] * 8 - self.player.width)
      end
      if self.player.d.x < 0 then
        xmin = max(xmin, t[1] * 8 + self.player.width)
      end
    end
  end)
  self.player.xmax = xmax
  self.player.xmin = xmin

  self.player:updatex()

  local ytiles = self.player:gettiles(false, true)

  local ymin = self.player.ymin
  local ymax = self.player.ymax
  foreach(ytiles, function(t)
    if fget(mget(t[1],t[2]), flags.obstacle) then
      if self.player.d.y > 0 then
        self.player.onplatform = true
        ymax = min(ymax, t[2] * 8 - self.player.height)
      end
      if self.player.d.y < 0 then
        ymin = max(ymin, (t[2]+1) * 8)

        if ymin == self.player.pos.y then
          self.player.jumpblocked = true
        end
      end
    end
  end)
  self.player.ymin = ymin
  self.player.ymax = ymax

  self.player:updatey()
  self.player:postupdate()
end

function level:draw()
  local camerax = self.player.pos.x - 64 + 4
  local cameray = self.player.pos.y - 64 + 4
  local clampedcamerax = mid(0, camerax, self.width - 128)
  local clampedcameray = mid(0, cameray, 128 - 128)

  foreach(config.layers, function(l)
    if l.camerafollow and l.camerafollow > 0 then
      camera(clampedcamerax * l.camerafollow, clampedcameray * l.camerafollow)
    else
      camera()
    end

    local flags = 0

    if l.flags then
      flags = getbitfield(l.flags)
    end

    if l.transparent ~= nil then
      palt(0, false)

      if type(l.transparent) == 'table' then
        foreach(l.transparent, function(c)
          palt(c, true)
        end)
      else
        palt(l.transparent, true)
      end
    else
      palt()
    end

    map(
      l.start[1],
      l.start[2],
      0,
      0,
      l.size[1],
      l.size[2],
      flags
    )
  end)

  self.player:draw()

  print('health: ' .. self.player.health, 4,4, 1)
  print('time: ' .. self.player.time, 92,4, 1)
end

function getbitfield(selectedflags)
  local result = 0
  foreach(selectedflags, function(f) result += 2 ^ f end)
  return result
end

function _init()
  printh("\n\n\n")
end

function _update()
  frame += 1

  levels[1]:update()
end

function _draw()
  levels[1]:draw()
end

frame = 0

sprites = {
  player = 0,
  roof = 23,
}

levels = {
  level()
}

__gfx__
077777700000000022222222e2e2e2e2e222e2220000000074440404444444444040744400000000000000008444484444844448500000000000000000000000
7700007708808800222222222e2e2e2e222222220000000046664646664664666464666400000000000000004666646666466664500000000000000000000000
700000078888888022222222e2e2e2e222e222e20000000004664646664664666464664000000000555000004666646666466664050000000000000000000000
7bbbbbb788888880222222222e2e2e2e222222220000000000444444444664444444440000000000000000004666646666466664050000000000000000000000
7bbbbbb78888888022222222e2e2e2e2e222e2220000000000446666664664666666640000000000555000008444484444844448005000000000000000000000
7bbbbbb708888800222222222e2e2e2e22222222000000000004444444466444444440000000000005000000400cccccccccccc4000550000000000000000000
7bbbbbb70088800022222222e2e2e2e222e222e200000000000046666664466666640000000000000500000040c7ccccccc7ccc4000005550000000000000000
7777777700080000222222222e2e2e2e222222220000000000000444444444444440000000000000050000004c7ccccccc7cccc4000000000000000000000000
00000000000000000000000000000000555555858858488800004788888848888884000005555550050000004ccccccccccc7cc4000000000000000000000000
00000000000000000000000000000000558545855558488800004888888848888884000055000055050000004cccccccccc7ccc4000000000000000000000000
00000000000000000000000000000000544545454455554500000444444444444440000050500005050000004ccccccccc7cccc4000000000000000000000000
00000000000000000000000000000000788585857585555400004784788888847884000050550005050000004cccccccc7ccccc4000000000000000000000000
00000000000000000000000000000000888585858885555400004884888888848884000050005505050000004cccc7cc7cccccc4000000000000000000000000
00000000000000000000000000000000888885858885555400004884888888848884000050000505050000004ccc7cccccccccc4000000000000000000000000
00000000000000000000000000000000444444454454454400000444444444444440000055000055050000004cccccccccccccc4000000000000000000000000
00000000000000000000000000000000888547858888455500004888888847888884000055555555050000004cccccccccccccc4000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000004cccccccc7ccccc4000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000004ccccccc7c0cccc4000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000004cccccc7000cccc4000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000004ccccc7ccc0ccc04000000000000000000000000
600ff000600ff0000600000000000000000000000000000000000000000000000000000000000000000000004cccc7ccccc0c00400000000000000000a0d8d00
000ff000000ff000000ff00000000000000000000000000000000000000000000000000000000000000000004ccc7ccccccc00040000000000000000000dd000
60cccc0060cccc0060cffc0000000000000000000000000000000000000000000000000000000000000000004cc7cccccc00000400000000000000000a66a600
66c6666666c6666666c666660000000000000000000000000000000000000000000000000000000000000000444444444444444400000000000000000606a600
6cc60cc06cc60cc06cc60cc00000000000000000000000000000000000000000078800080000000000aaaa00000000000000000000000000000000000606a600
6ccccc006ccccc006ccccc00000000000000000000000000000000000000000007887878000000000a0000a0000000000000000000000000000000000d06a600
09999900099999000999990000000000000000000000000000000000000000000788878800000000a00aa00a000000000000000000000000000000000066a600
0ccccc000ccccc000ccccc0000000000000000000000000000000000000000000788787800000000a0a00a0a000000000000000000000000000000000666a600
0c000c000c00090009000c0000000000000000000000000000000000000000000700888000000000a0a00a0a0000000000000000000000000000000006000600
0c000c000c00099009900c0000000000000000000000000000000000000000000700000000000000a00aa00a0000000000000000000000000000000006000600
090009000900000000000900000000000000000000000000000000000000000007000000000000000a0000a0000000000000000000000000000000000d000d00
0990099009900000000009900000000000000000000000000000000000000000070000000000000000aaaa00000000000000000000000000000000000dd00dd0
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
20202020202020202020202020202020f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000
__gff__
0000000101000303030001030300000000000000030301030101010303000000000000000000000000000003030000000000000000000000040810000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0a0f0f0f0f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f1a0f0f0f0f000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f1a0f0f0f0f000000000000000000000000000000000000000000000000000000001a38000000000019000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f1a0f0f0f0f000000000000000000000000000000000000000000000000000000060707080f0f060707080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f1a0f0f0f0f000000000000000000000000000000000000000000000000000000161515180f19161514180000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f190f38190f000000000000000000000000000000000000000000000000000006070707070707070707070800000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f060707070708000000000000000000000000000000000000000000000000000000061717141717141417080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f161417171518000000000000000000000000000000000000000000000607080000160b0c170b0c170b0c1800000000000f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0000000000000000000000000000000000000000000000
0a0f0a0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f16170b0c1718000000000000000000000000000000000000000000001617180000161b1c171b1c151b1c1800000000000f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0000000000000000000000000a00000000000000000000
1a191a0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0607070707171b1c1708000000000000000000000000000000000000000000001617180000161b1c151b1c171b1c1800000000000f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0000000000000000000000001a00000000000000000000
070707080f0f0f0f0f0f0f0f0f0f0f0f0f0f0f19190f0f0f0f380f0f0f0f0f060707080f0f1615171717152b2c1718000000000000000000000000000000000000000006070815180000161b1c171b1c151b1c1800000000000f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0000000000000a00000000001a00000000000000000000
171714180f0f0f0f0f0f0f0f0f0f0f0f0f0f060707070707070707080f0f0f161517180f0f161715171517191917080000000000000000000000000a0000000000000f16141515180000162b2c172b2c172b2c1800000000000f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0000000000001a00000000001a00000000000000000000
0c1717180f0f0f0f0f0f0f0f0f0f380f0f0f161417171717141717180f0f0f161715180f0f161717151717171717180000000000000000000000001a0000000000000f161717171800001607071707071707071800000000000f0f0f0f0f0f0f0f0f0f0f0f0f0f0f190000000000001a00000000001a00000000003a3a3a0000
1c1715180f0f0f0f06070707070707080f0f160b0c170b0c170b0c180f0f0f161717180f0f161715171717171717080000000000000000000f38191a000000000f0607081717171800001617151714141717141800000000000f0f0f0f0f0f0f0f0f0f0f0f0f0f06070707080000000700000000000700000000000607070000
1c1517180f0f0f0f16171515171717180f0f161b1c151b1c171b1c180f0f0f161717180f0f1615171717171717080f000a0000000a0f0f0f06070708000000000f161715171715180000160b0c170b0c170b0c18000a0a19000f0f0f0a0f0f0f0607080f0f0f0f16141417180000001700000000001500000000001617170000
020202020202020202020202020202020f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f000000000000000000000000000000000000000000000000000000000000000000000f0f0f0f000000000f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0000000000000000000000000000000000000000
020202020202020202020202020202020f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0000000000000000000000000000000000000000000000000000000000000000000000000f0f0000000000000000000000000f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000
030303030303030303030303030303030f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f00000000000000000f0f0000000000000000000000000000000000000000
040404040404040404040404040404040f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
020202020202020202020202020202020f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
020202020202020202020202020202020f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
020202020202020202020202020202020f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
020202020202020202020202020202020f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
020202020202020202020202020202020f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
020202020202020202020202020202020f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
020202020202020202020202020202020f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
020202020202020202020202020202020f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
020202020202020202020202020202020f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
020202020202020202020202020202020f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
020202020202020202020202020202020f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
020202020202020202020202020202020f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
